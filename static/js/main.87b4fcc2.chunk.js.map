{"version":3,"sources":["components/Converter/Converter.jsx","components/Converter/Hex2rgb/Hex2rgb.js","App.jsx","reportWebVitals.js","index.js"],"names":["INITIONAL_COLOR","rgb","hex","backgroundColor","Converter","useState","color","setColor","onFieldChange","e","target","value","length","prev","rgbValue","result","exec","r","parseInt","g","b","hexToRgb","className","style","onChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAIMA,EAAkB,CACrBC,IAAK,GACLC,IAAK,IACLC,gBAAiB,WAGL,SAASC,IAAa,IAAD,EACPC,mBAASL,GADF,mBAC1BM,EAD0B,KACnBC,EADmB,KAG3BC,EAAgB,SAACC,GAAO,IACnBC,EAAWD,EAAXC,OAER,GAAIA,EAAOC,MAAMC,OAAS,EACvBL,GAAS,SAACM,GAAD,mBAAC,eACJA,GADG,IAENX,IAAKQ,EAAOC,eAHlB,CAQA,IAAMG,ECxBG,SAAkBZ,GAC9B,IAAMa,EAAS,4CAA4CC,KAAKd,GAChE,OAAOa,EACF,CACGE,EAAGC,SAASH,EAAO,GAAI,IACvBI,EAAGD,SAASH,EAAO,GAAI,IACvBK,EAAGF,SAASH,EAAO,GAAI,KAE1B,KDgBeM,CAASX,EAAOC,OACjCJ,GAAS,SAACM,GAAD,mBAAC,eACJA,GADG,IAENX,IAAKQ,EAAOC,MACZV,IACgB,OAAba,EACK,wCADL,cAEYA,EAASG,EAFrB,YAE0BH,EAASK,EAFnC,YAEwCL,EAASM,EAFjD,KAGHjB,gBACgB,OAAbW,EAAoBD,EAAKV,gBAAkBO,EAAOC,aAI3D,OACG,sBACGW,UAAU,YACVC,MAAO,CAAEpB,gBAAiBG,EAAMH,iBAFnC,UAIG,uBACGmB,UAAU,kBACVX,MAAOL,EAAMJ,IACbsB,SAAUhB,IAEb,qBAAKc,UAAU,mBAAmBE,SAAUhB,EAA5C,SACIF,EAAML,SEpCJwB,MARf,WACG,OACG,qBAAKH,UAAU,MAAf,SACG,cAAC,EAAD,OCKMI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAEN,cAAC,IAAMC,WAAP,UACG,cAAC,EAAD,MAEHC,SAASC,eAAe,SAM3Bb,M","file":"static/js/main.87b4fcc2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Converter.css';\nimport hexToRgb from './Hex2rgb/Hex2rgb';\n\nconst INITIONAL_COLOR = {\n   rgb: '',\n   hex: '#',\n   backgroundColor: '#ffaaaa',\n};\n\nexport default function Converter() {\n   const [color, setColor] = useState(INITIONAL_COLOR);\n\n   const onFieldChange = (e) => {\n      const { target } = e;\n\n      if (target.value.length < 7) {\n         setColor((prev) => ({\n            ...prev,\n            hex: target.value,\n         }));\n         return;\n      }\n\n      const rgbValue = hexToRgb(target.value);\n      setColor((prev) => ({\n         ...prev,\n         hex: target.value,\n         rgb:\n            rgbValue === null\n               ? 'Ошибка!'\n               : `rgb(${rgbValue.r},${rgbValue.g},${rgbValue.b})`,\n         backgroundColor:\n            rgbValue === null ? prev.backgroundColor : target.value,\n      }));\n   };\n\n   return (\n      <div\n         className=\"Converter\"\n         style={{ backgroundColor: color.backgroundColor }}\n      >\n         <input\n            className=\"Converter-field\"\n            value={color.hex}\n            onChange={onFieldChange}\n         />\n         <div className=\"Converter-result\" onChange={onFieldChange}>\n            {color.rgb}\n         </div>\n      </div>\n   );\n}\n","export default function hexToRgb(hex) {\n   const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n   return result\n      ? {\n           r: parseInt(result[1], 16),\n           g: parseInt(result[2], 16),\n           b: parseInt(result[3], 16),\n        }\n      : null;\n}\n","import React from 'react';\nimport './App.css';\nimport Converter from './components/Converter/Converter';\n\nfunction App() {\n   return (\n      <div className=\"App\">\n         <Converter />\n      </div>\n   );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n   // eslint-disable-next-line react/jsx-filename-extension\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}